(()=>{"use strict";const e="<div> From an HTML-A file {{x}} and {{y}} </div>";console.log("loaded componentA template");class o extends ko.Component{constructor({x:e,y:o}){super(),Object.assign(this,{x:e,y:o}),console.log("Constructor component A")}static get elementName(){return"component-a"}static get template(){return e}static set template(o){e=o}static get sync(){return!0}koDescendantsComplete(){console.log("koDescendantsComplete: ComponentA")}}console.log("Registered component A"),o.register("component-a");const t="<div> From an HTML-B file {{x}} and {{y}} </div>";console.log("loaded componentB template");class n extends ko.Component{constructor({x:e,y:o}){super(),Object.assign(this,{x:e,y:o}),console.log("Parsed component B")}static get elementName(){return"component-b"}static get template(){return t}static set template(e){t=e}static get sync(){return!0}koDescendantsComplete(){console.log("koDescendantsComplete: ComponentB")}}console.log("Registered component B"),n.register("component-b"),console.log("Parsed sampleF"),console.log("Done with component.register "+o.elementName+n.elementName);let s=document.querySelector("#page-root"),l={loaded:ko.observable(!1)};ko.applyBindings(l,s).then((()=>{s.style.display="block",console.log("applyBindings promise"),l.loaded(!0)})),console.log("Done with applyBindings")})();